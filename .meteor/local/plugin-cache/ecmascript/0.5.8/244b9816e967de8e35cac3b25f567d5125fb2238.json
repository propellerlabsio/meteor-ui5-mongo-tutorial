{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/propellerlabsio:meteor-ui5-mongo/model/PropertyBinding-dbg.js","filenameRelative":"/packages/propellerlabsio:meteor-ui5-mongo/model/PropertyBinding-dbg.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/propellerlabsio:meteor-ui5-mongo/model/PropertyBinding-dbg.js.map","sourceFileName":"/packages/propellerlabsio:meteor-ui5-mongo/model/PropertyBinding-dbg.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"PropertyBinding-dbg"},"ignored":false,"code":"'use strict';\n\n/**\n * @file meteor-ui5-mongo.model.PropertyBinding.js\n * @copyright PropellerLabs.io 2016\n * @license Apache-2.0\n */\n/* eslint-disable */\n\nsap.ui.define(['jquery.sap.global', 'sap/ui/model/PropertyBinding', 'sap/ui/model/SimpleType', 'sap/ui/model/DataState'], function (jQuery, PropertyBinding, SimpleType, DataState) {\n  \"use strict\";\n\n  /**\n   * @summary Constructor for PropertyBinding\n   *\n   * @class\n   * @description The PropertyBinding is used to access single data values in\n   * the data model.\n   *\n   * @param {meteor-ui5-mongo.model.Model} oModel\n   * @param {string} sPath\n   * @param {sap.ui.model.Context} oContext\n   * @param {object} [mParameters]\n   *\n   * @public\n   * @alias meteor-ui5-mongo.model.PropertyBinding\n   * @extends sap.ui.model.PropertyBinding\n   */\n\n  var cPropertyBinding = PropertyBinding.extend(\"meteor-ui5-mongo.model.PropertyBinding\", {\n\n    constructor: function () {\n      function constructor(oModel, sPath, oContext, mParameters) {\n        // Call super constructor\n        PropertyBinding.apply(this, arguments);\n      }\n\n      return constructor;\n    }()\n\n  });\n\n  /**\n   * Returns the current value of the bound target\n   *\n   * @return {object} the current value of the bound target\n   *\n   * @public\n   */\n  cPropertyBinding.prototype.getValue = function () {\n    return this.oModel.getProperty(this.sPath, this.oContext);\n  };\n\n  /**\n   * Sets the value for this binding. A model implementation should check if the current default binding mode permits\n   * setting the binding value and if so set the new value also in the model.\n   *\n   * @param {object} oValue the value to set for this binding\n   *\n   * @public\n   */\n  // TODO: Implement when we support two-way data binding (future version)\n\n  return cPropertyBinding;\n});\n//# sourceMappingURL=PropertyBinding.js.map","ast":null,"map":{"version":3,"sources":["/packages/propellerlabsio:meteor-ui5-mongo/model/PropertyBinding-dbg.js"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA,IAAI,EAAJ,CAAO,MAAP,CAAc,CAAC,mBAAD,EAAsB,8BAAtB,EAAsD,yBAAtD,EAAiF,wBAAjF,CAAd,EAA0H,UAAU,MAAV,EAAkB,eAAlB,EAAmC,UAAnC,EAA+C,SAA/C,EAA0D;AAClL;;;;;;;;;;;;;;;;;;;AAmBA,MAAI,mBAAmB,gBAAgB,MAAhB,CAAuB,wCAAvB,EAAiE;;AAEtF;AAAa,eAAS,WAAT,CAAqB,MAArB,EAA6B,KAA7B,EAAoC,QAApC,EAA8C,WAA9C,EAA2D;;AAEtE,wBAAgB,KAAhB,CAAsB,IAAtB,EAA4B,SAA5B;AACD;;AAHD,aAAsB,WAAtB;AAAA;;AAFsF,GAAjE,CAAvB;;;;;;;;;AAgBA,mBAAiB,SAAjB,CAA2B,QAA3B,GAAsC,YAAY;AAChD,WAAO,KAAK,MAAL,CAAY,WAAZ,CAAwB,KAAK,KAA7B,EAAoC,KAAK,QAAzC,CAAP;AACD,GAFD;;;;;;;;;;;;AAeA,SAAO,gBAAP;AACD,CApDD","file":"/packages/propellerlabsio:meteor-ui5-mongo/model/PropertyBinding-dbg.js.map","sourcesContent":["'use strict';\n\n/**\n * @file meteor-ui5-mongo.model.PropertyBinding.js\n * @copyright PropellerLabs.io 2016\n * @license Apache-2.0\n */\n/* eslint-disable */\nsap.ui.define(['jquery.sap.global', 'sap/ui/model/PropertyBinding', 'sap/ui/model/SimpleType', 'sap/ui/model/DataState'], function (jQuery, PropertyBinding, SimpleType, DataState) {\n  \"use strict\";\n\n  /**\n   * @summary Constructor for PropertyBinding\n   *\n   * @class\n   * @description The PropertyBinding is used to access single data values in\n   * the data model.\n   *\n   * @param {meteor-ui5-mongo.model.Model} oModel\n   * @param {string} sPath\n   * @param {sap.ui.model.Context} oContext\n   * @param {object} [mParameters]\n   *\n   * @public\n   * @alias meteor-ui5-mongo.model.PropertyBinding\n   * @extends sap.ui.model.PropertyBinding\n   */\n\n  var cPropertyBinding = PropertyBinding.extend(\"meteor-ui5-mongo.model.PropertyBinding\", {\n\n    constructor: function constructor(oModel, sPath, oContext, mParameters) {\n      // Call super constructor\n      PropertyBinding.apply(this, arguments);\n    }\n\n  });\n\n  /**\n   * Returns the current value of the bound target\n   *\n   * @return {object} the current value of the bound target\n   *\n   * @public\n   */\n  cPropertyBinding.prototype.getValue = function () {\n    return this.oModel.getProperty(this.sPath, this.oContext);\n  };\n\n  /**\n   * Sets the value for this binding. A model implementation should check if the current default binding mode permits\n   * setting the binding value and if so set the new value also in the model.\n   *\n   * @param {object} oValue the value to set for this binding\n   *\n   * @public\n   */\n  // TODO: Implement when we support two-way data binding (future version)\n\n\n  return cPropertyBinding;\n});\n//# sourceMappingURL=PropertyBinding.js.map\n"]},"hash":"244b9816e967de8e35cac3b25f567d5125fb2238"}
